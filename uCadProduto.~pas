unit uCadProduto;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, uCadPadrao, ZSqlUpdate, DB, ZAbstractRODataset,
  ZAbstractDataset, ZDataset, ActnList, ImgList, Grids, DBGrids, ComCtrls,
  StdCtrls, ToolWin, jpeg, ExtCtrls, DBCtrls, Mask, CheckDBGrid, XiButton;

type
  TfCadProduto = class(TfCadPadrao)
    Label2: TLabel;
    Label3: TLabel;
    DBEdit1: TDBEdit;
    DBEdit2: TDBEdit;
    dFicha: TDataSource;
    qFicha: TZQuery;
    TId: TIntegerField;
    Tdescricao: TStringField;
    Ttipo: TStringField;
    Test_seguranca: TFloatField;
    Test_minimo: TFloatField;
    Tft_conv_un: TStringField;
    Tft_conv_qtde: TFloatField;
    Tft_conv_2un: TStringField;
    Tproduzido: TStringField;
    TabSheet3: TTabSheet;
    DBCheckBox1: TDBCheckBox;
    lCPFCNPJ: TLabel;
    CheckDBGrid1: TCheckDBGrid;
    Label4: TLabel;
    Label5: TLabel;
    ckSA: TCheckBox;
    upF: TZUpdateSQL;
    cbUnid: TDBComboBox;
    Bevel1: TBevel;
    btExcluirF: TXiButton;
    rdTipo: TRadioGroup;
    gdPesq: TDBGrid;
    EdNom: TEdit;
    edCod: TEdit;
    qFichaId: TIntegerField;
    qFichaIdProduto: TIntegerField;
    qFichaTipo: TStringField;
    qFichaUnidade: TStringField;
    qFichaQuantidade: TFloatField;
    qFichadescr: TStringField;
    Label6: TLabel;
    qFichaTipo2: TStringField;
    qFichaIdItem: TIntegerField;
    btAddP: TXiButton;
    Label7: TLabel;
    DBText1: TDBText;
    Label8: TLabel;
    DBEdit3: TDBEdit;
    Label9: TLabel;
    DBEdit4: TDBEdit;
    Label10: TLabel;
    DBEdit5: TDBEdit;
    Label11: TLabel;
    DBEdit6: TDBEdit;
    Tbarras: TStringField;
    Treferencia: TStringField;
    Tvalor: TFloatField;
    Tqtdestoque: TFloatField;
    Bevel2: TBevel;
    acTipo: TAction;
    edQtd: TMaskEdit;
    procedure acInserirExecute(Sender: TObject);
    procedure acEditarExecute(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure acSalvarExecute(Sender: TObject);
    procedure TNewRecord(DataSet: TDataSet);
    procedure EdPesqChange(Sender: TObject);
    procedure DBCheckBox1Click(Sender: TObject);
    procedure TAfterScroll(DataSet: TDataSet);
    procedure EdNomChange(Sender: TObject);
    procedure gdPesqKeyPress(Sender: TObject; var Key: Char);
    procedure acCancelarExecute(Sender: TObject);
    procedure btExcluirFClick(Sender: TObject);
    procedure rdTipoClick(Sender: TObject);
    procedure edCodExit(Sender: TObject);
    procedure EdNomKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure edCodKeyPress(Sender: TObject; var Key: Char);
    procedure edQtdKeyPress(Sender: TObject; var Key: Char);
    procedure btAddPClick(Sender: TObject);
    procedure qFichaAfterPost(DataSet: TDataSet);
    procedure acTipoExecute(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    vNFicha : string;
    Procedure AddFicha;
  end;

var
  fCadProduto: TfCadProduto;

implementation

uses uDM, uFuncao;

{$R *.dfm}

procedure TfCadProduto.AddFicha;
begin

  qFicha.Close;
  qFicha.ParamByName('Id').Value := 0;
  qFicha.Open;
  qFicha.Insert;
  qFichaId.Value        := InsereCodigo('ficha_tecnica', 'ID');
  qFichaIdProduto.Value := TId.Value;

end;

procedure TfCadProduto.acInserirExecute(Sender: TObject);
begin
  inherited;
  DBEdit1.ReadOnly := True;
  DBEdit1.Color := $00CEFDFC;
  DBEdit3.SetFocus;

  btExcluirF.Enabled := true;
  btAddP.Enabled     := true;

  edCod.ReadOnly        := False;
  edNom.ReadOnly        := False;
  edCod.Color           := clWhite;
  edNom.Color           := clWhite;

end;

procedure TfCadProduto.acEditarExecute(Sender: TObject);
begin
  inherited;
  DBEdit1.ReadOnly := True;
  DBEdit1.Color := $00CEFDFC;
  DBEdit3.SetFocus;

  btExcluirF.Enabled := true;
  btAddP.Enabled     := true;

  edCod.ReadOnly        := False;
  edNom.ReadOnly        := False;
  edCod.Color           := clWhite;
  edNom.Color           := clWhite;

end;

procedure TfCadProduto.FormCreate(Sender: TObject);
begin
  inherited;

  btExcluirF.Enabled := false;
  btAddP.Enabled     := false;

  edCod.ReadOnly     := true;
  edNom.ReadOnly     := true;
  EdCod.Color        := StringToColor('$00CEFDFC');
  edNom.Color        := StringToColor('$00CEFDFC');


end;

procedure TfCadProduto.acSalvarExecute(Sender: TObject);
begin
  SelectNext(ActiveControl, True, True);

  if  (Tdescricao.Text = '' ) then begin
     Application.MessageBox('Descrição não preenchida.','Atenção');
     DBEdit2.SetFocus;
     exit;
  end;

  dm.qPesq.close;
  dm.qPesq.SQL.Clear;
  dm.qPesq.SQL.Add('select * from produto where descricao = ' + quotedstr(trim(Tdescricao.Text)) );
  dm.qPesq.Open;
  if T.State in [dsInsert] then
  begin
     if dm.qPesq.RecordCount >= 1 then
     begin
       Application.MessageBox('Produto ja Cadastrado, Por Favor Tente Novamente','Atenção');
       dbedit2.SetFocus;
       exit;
     end;
  end;

  inherited;

  btExcluirF.Enabled := false;
  btAddP.Enabled     := false;

  edCod.ReadOnly     := true;
  edNom.ReadOnly     := true;
  EdCod.Color        := StringToColor('$00CEFDFC');
  edNom.Color        := StringToColor('$00CEFDFC');

end;

procedure TfCadProduto.TNewRecord(DataSet: TDataSet);
begin

  TId.Value        := InsereCodigo('produto', 'id');
  Ttipo.Value      := 'P';
  Tproduzido.Value := 'N';

end;

procedure TfCadProduto.EdPesqChange(Sender: TObject);
begin
  T.Close;
  T.ParamByName('pesq').Value := '%' + trim(edPesq.Text) + '%';
  T.Open;
end;

procedure TfCadProduto.DBCheckBox1Click(Sender: TObject);
begin
  if DBCheckBox1.Checked then
    PageControl1.Pages[2].TabVisible := true  //ficha tecnica
  else
    PageControl1.Pages[2].TabVisible := false;

end;

procedure TfCadProduto.TAfterScroll(DataSet: TDataSet);
begin

  DBCheckBox1Click(Application);

  if (T.State = dsBrowse) and (Tproduzido.Text = 'S') then begin
     qFicha.Close;
     qFicha.ParamByName('ID').value := Tid.Value;
     qFicha.Open;
  end;

end;

procedure TfCadProduto.EdNomChange(Sender: TObject);
begin
  if (EdNom.Text <> '')  then begin
     DM.qPesq.Close;
     DM.qPesq.SQL.Clear;
     if rdTipo.ItemIndex = 0 then   //SA
        DM.qPesq.SQL.Add('select id,  descricao nome from semi_acabado where descricao like '+QuotedStr('%'+EdNom.Text+'%'))
     else
        DM.qPesq.SQL.Add('select id, descricao nome, ft_conv_un, ft_conv_2un from produto where tipo = ''M'' and descricao like '+QuotedStr('%'+EdNom.Text+'%'));
     DM.qPesq.Open;
     gdPesq.Left := edCod.Left;
     gdPesq.Top  := edCod.Top + edCod.Height + 2;
     if DM.qPesq.IsEmpty then
       gdPesq.Visible := False
     else
       gdPesq.Visible := True;
  END
  else
     gdPesq.Visible := False;


end;

procedure TfCadProduto.gdPesqKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then begin
    Key := #0;

    EdCod.Text := DM.qPesq.FieldByName('id').Value;
    EdCodExit(Application);
  end;

end;

procedure TfCadProduto.acCancelarExecute(Sender: TObject);
begin
  inherited;
  btExcluirF.Enabled := false;
end;

procedure TfCadProduto.btExcluirFClick(Sender: TObject);
begin
  inherited;
  qFicha.Delete;
end;

procedure TfCadProduto.rdTipoClick(Sender: TObject);
begin
  inherited;
  edCod.Clear;
  EdNom.Clear;

  edNom.SetFocus;
  
end;

procedure TfCadProduto.edCodExit(Sender: TObject);
begin

  if (EdCod.Text <> '')  then begin
    DM.qPesq.Close;
    DM.qPesq.SQL.Clear;
    if rdTipo.ItemIndex = 0 then   //SA
      DM.qPesq.SQL.Add('select id,  descricao nome from semi_acabado where id = '+ edCod.Text )
    else
      DM.qPesq.SQL.Add('select id, descricao nome, ft_conv_un, ft_conv_2un from produto where tipo = ''M'' and id = '+ EdCod.Text );
    DM.qPesq.Open;
    if not DM.qPesq.IsEmpty then begin
       edNom.Text := dm.qpesq.fieldbyname('nome').Text;
       gdPesq.Visible := false;
       cbUnid.Items.Clear;
       if rdTipo.ItemIndex = 0 then begin  // sa
          cbUnid.Items.Add('UN');
          cbUnid.Update;
          cbUnid.ItemIndex := 0;
          cbUnid.ReadOnly := true;
          edQtd.SetFocus;
       end
       else begin
         cbUnid.Items.Add(dm.qpesq.fieldbyname('ft_conv_un').Text);
         cbUnid.Items.Add(dm.qpesq.fieldbyname('ft_conv_2un').Text);
         cbUnid.Update;
         cbUnid.ItemIndex := 0;
         cbUnid.ReadOnly := false;
         cbUnid.SetFocus;
       end;
    END;
  end;



end;

procedure TfCadProduto.EdNomKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = vk_down then
     if gdPesq.Visible then
        gdPesq.SetFocus;

end;

procedure TfCadProduto.edCodKeyPress(Sender: TObject; var Key: Char);
begin
  somente_numero_sem_virgula( key );

end;

procedure TfCadProduto.edQtdKeyPress(Sender: TObject; var Key: Char);
begin
  somente_numero( key );

end;

procedure TfCadProduto.btAddPClick(Sender: TObject);
var
  vFicha : string;
begin

    if trim(edCod.Text) = '' then begin
      Application.MessageBox('Informe o Codigo na Ficha Tecnica!', 'Atenção');
      edCod.SetFocus;
      exit;
    end;

    if trim(edNom.Text) = '' then begin
      Application.MessageBox('Informe a Descrição na Ficha Tecnica!', 'Atenção');
      edNom.SetFocus;
      exit;
    end;

    if trim(cbUnid.Text) = '' then begin
      Application.MessageBox('Informe a Unidade na Ficha Tecnica!', 'Atenção');
      cbUnid.SetFocus;
      exit;
    end;

    if trim(edQtd.Text) = '' then begin
      Application.MessageBox('Informe a Quantidade na Ficha Tecnica!', 'Atenção');
      edQtd.SetFocus;
      exit;
    end;

    qFicha.Insert;
    qFichaIdProduto.Value  := TID.Value;
    qFichaIdItem.Value     := strtoint(edCod.text);
    if rdTipo.ItemIndex = 0 then // SA
      qFichaTipo.Text := 'S'
    else
      qFichaTipo.Text := 'M';
    qFichaUnidade.text     := trim(cbUnid.Text);
    qFichaQuantidade.Value := strtofloat(edQtd.text);
    qFicha.post;

    qFicha.Close;
    qFicha.Params[0].value := Tid.value;
    qFicha.Open; //atualizar a descrição dos produtos

    EdNom.Clear;
    edCod.Clear;
    cbUnid.Items.Clear;
    edQtd.Clear;

    EdNom.SetFocus;

end;

procedure TfCadProduto.qFichaAfterPost(DataSet: TDataSet);
begin
  qFicha.ApplyUpdates;
end;

procedure TfCadProduto.acTipoExecute(Sender: TObject);
begin

  if not (T.State in [dsEdit, dsInsert]) then
     exit;

  if rdTipo.ItemIndex = 0 then
     rdTipo.ItemIndex := 1
  else
     rdTipo.ItemIndex := 0;

end;

end.
